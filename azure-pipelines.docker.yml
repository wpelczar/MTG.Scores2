# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
- group: Dockerhub
- name: imageName_api
  value: 'mtgscores2_api:ci-$(build.buildId)'
- name: imageName_api_build
  value: 'mtgscores2_api_build:ci-$(build.buildId)'
- name: imageName_web
  value: 'mtgscores2_web:ci-$(build.buildId)'

steps:
- script: |
    docker build -f src/api/ci.build.yml -t $(imageName_api_build) src/api/
    docker run --name api_build --rm -d -t $(imageName_api_build)
    docker cp api_build:/app/MTG.Scores2.Api.Tests/TestResults/testresults.trx $(System.DefaultWorkingDirectory)
    docker cp api_build:/out $(System.DefaultWorkingDirectory)/src/api
    docker stop api_build
  displayName: 'docker build api'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: Docker@1
  inputs:
    imageName: $(dockerhub_user)/$(imageName_api)
    dockerFile: src/api/ci.runtime.yml
    addDefaultLabels: false
  displayName: 'docker build runtime image api'

- task: Docker@1
  inputs:
    imageName: $(dockerhub_user)/$(imageName_web)
    dockerFile: src/web/Dockerfile
    addDefaultLabels: false
  displayName: 'docker build web'

- task: Docker@1
  inputs:
    dockerRegistryEndpoint: 'wpelczar_dockerhub'
    containerregistrytype: 'Container Registry'
    command: login
  displayName: 'dockerhub login'

- task: Docker@1
  inputs:
    command: Push an image
    imageName: $(dockerhub_user)/$(imageName_api)
  displayName: 'push api image to dockerhub'
  
- task: Docker@1
  inputs:
    command: Push an image
    imageName: $(dockerhub_user)/$(imageName_web)
  displayName: 'push web image to dockerhub'