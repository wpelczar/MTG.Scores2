// <auto-generated />
using System;
using MTG.Scores2.Api.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MTG.Scores2.Api.Migrations
{
    [DbContext(typeof(MtgContext))]
    [Migration("20190301183642_tournaments")]
    partial class tournaments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MTG.Scores2.Api.Models.Match", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Player1ID");

                    b.Property<int>("Player1Score");

                    b.Property<int?>("Player2ID");

                    b.Property<int>("Player2Score");

                    b.Property<int?>("TournamentID");

                    b.HasKey("ID");

                    b.HasIndex("Player1ID");

                    b.HasIndex("Player2ID");

                    b.HasIndex("TournamentID");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("MTG.Scores2.Api.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("MTG.Scores2.Api.Models.Tournament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Tournament");
                });

            modelBuilder.Entity("MTG.Scores2.Api.Models.TournamentPlayer", b =>
                {
                    b.Property<int>("TournamentId");

                    b.Property<int>("PlayerId");

                    b.HasKey("TournamentId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("TournamentPlayer");
                });

            modelBuilder.Entity("MTG.Scores2.Api.Models.Match", b =>
                {
                    b.HasOne("MTG.Scores2.Api.Models.Player", "Player1")
                        .WithMany("HomeMatches")
                        .HasForeignKey("Player1ID");

                    b.HasOne("MTG.Scores2.Api.Models.Player", "Player2")
                        .WithMany("AwayMatches")
                        .HasForeignKey("Player2ID");

                    b.HasOne("MTG.Scores2.Api.Models.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentID");
                });

            modelBuilder.Entity("MTG.Scores2.Api.Models.TournamentPlayer", b =>
                {
                    b.HasOne("MTG.Scores2.Api.Models.Player", "Player")
                        .WithMany("TournamentPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MTG.Scores2.Api.Models.Tournament", "Tournament")
                        .WithMany("TournamentPlayers")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
